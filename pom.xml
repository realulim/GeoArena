<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
	<groupId>org.springframework.boot</groupId>
	<artifactId>spring-boot-starter-parent</artifactId>
	<version>2.1.4.RELEASE</version>
	<relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>de.mayring</groupId>
    <artifactId>geoarena</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>GeoArena</name>
    <description>Starter for GIS Projects</description>

    <properties>
	<java.version>1.8</java.version>
    </properties>

    <dependencies>
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-data-jpa</artifactId>
	</dependency>
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-thymeleaf</artifactId>
	</dependency>
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-web</artifactId>
	</dependency>
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-devtools</artifactId>
	    <scope>runtime</scope>
	</dependency>
	<dependency>
	    <groupId>org.apache.commons</groupId>
	    <artifactId>commons-lang3</artifactId>
	    <version>3.9</version>
	</dependency>	
	<dependency>
	    <groupId>org.hibernate</groupId>
	    <artifactId>hibernate-spatial</artifactId>
	</dependency>
	<dependency>
	    <groupId>org.projectlombok</groupId>
	    <artifactId>lombok</artifactId>
	    <optional>true</optional>
	</dependency>
	<dependency>
	    <groupId>de.grundid.opendatalab</groupId>
	    <artifactId>geojson-jackson</artifactId>
	    <version>1.8.1</version>
	</dependency>
	<dependency>
	    <groupId>com.vividsolutions</groupId>
	    <artifactId>jts-io</artifactId>
	    <version>1.14.0</version>
	</dependency>
	<dependency>
	    <groupId>org.webjars.npm</groupId>
	    <artifactId>jquery</artifactId>
	    <version>3.5.0</version>
	</dependency>
	<dependency>
	    <groupId>org.webjars.npm</groupId>
	    <artifactId>leaflet</artifactId>
	    <version>1.4.0</version>
	</dependency>
	<dependency>
	    <groupId>org.webjars.npm</groupId>
	    <artifactId>leaflet-routing-machine</artifactId>
	    <version>3.2.12</version>
	</dependency>
	<dependency>
	    <groupId>org.webjars.npm</groupId>
	    <artifactId>leaflet-control-geocoder</artifactId>
	    <version>1.6.0</version>
	</dependency>
	<dependency>
	    <groupId>org.webjars.npm</groupId>
	    <artifactId>leaflet-fullscreen</artifactId>
	    <version>1.0.2</version>
	</dependency>
	<dependency>
	    <groupId>org.webjars.npm</groupId>
	    <artifactId>sweetalert2</artifactId>
	    <version>8.12.1</version>
	</dependency>
	<dependency>
	    <groupId>us.monoid.web</groupId>
	    <artifactId>resty</artifactId>
	    <version>0.3.2</version>
	</dependency>
    </dependencies>

    <build>
	<plugins>
	    <plugin>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-maven-plugin</artifactId>
	    </plugin>
	    <plugin>
		<groupId>com.github.eirslett</groupId>
		<artifactId>frontend-maven-plugin</artifactId>
		<version>1.7.5</version>
		<executions>
		    <execution>
			<id>install node and npm</id>
			<goals>
			    <goal>install-node-and-npm</goal>
			</goals>
			<configuration>
			    <nodeVersion>v10.15.3</nodeVersion>
			    <npmVersion>6.4.1</npmVersion>
			</configuration>
		    </execution>
		    <execution>
			<id>npm install</id>
			<goals>
			    <goal>npm</goal>
			</goals>
			<configuration>
			    <arguments>install</arguments>
			</configuration>
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<artifactId>maven-resources-plugin</artifactId>
		<version>3.0.2</version>
		<executions>
		    <execution>
			<id>copy-js-from-npm</id>
			<phase>validate</phase>
			<goals>
			    <goal>copy-resources</goal>
			</goals>
			<configuration>
			    <outputDirectory>${basedir}/src/main/resources/static/js</outputDirectory>
			    <resources>
				<resource>
				    <directory>node_modules/leaflet-control-geocoder-here-places/dist</directory>
				    <includes>
					<include>*.js</include>
				    </includes>
				</resource>
				<resource>
				    <directory>node_modules/leaflet.defaultextent/dist</directory>
				    <includes>
					<include>*.js</include>
				    </includes>
				</resource>
			    </resources>
			</configuration>            
		    </execution>
		    <execution>
			<id>copy-css-from-npm</id>
			<phase>validate</phase>
			<goals>
			    <goal>copy-resources</goal>
			</goals>
			<configuration>
			    <outputDirectory>${basedir}/src/main/resources/static/css</outputDirectory>
			    <resources>
				<resource>
				    <directory>node_modules/leaflet.defaultextent/dist</directory>
				    <includes>
					<include>*.css</include>
					<include>*.png</include>
				    </includes>
				</resource>
			    </resources>
			</configuration>            
		    </execution>
		</executions>
	    </plugin>
	    <plugin>
		<groupId>com.spotify</groupId>
		<artifactId>dockerfile-maven-plugin</artifactId>
		<version>1.4.12</version>
		<!-- Wire up to the default build phases -->
		<executions>
		    <execution>
			<id>default</id>
			<goals>
			    <goal>build</goal>
			    <goal>push</goal>
			</goals>
		    </execution>
		</executions>
		<configuration>
		    <repository>realulim/${project.artifactId}</repository>
		    <buildArgs>
			<JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>
		    </buildArgs>
		</configuration>
		<dependencies>
		    <!-- To make this work on JDK 9+ -->
		    <dependency>
			<groupId>javax.activation</groupId>
			<artifactId>javax.activation-api</artifactId>
			<version>1.2.0</version>
		    </dependency>
		</dependencies>
	    </plugin>	    
	</plugins>
    </build>

</project>
